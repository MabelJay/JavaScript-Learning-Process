1. js programme is written by Unicode
2. comments is the same as java: //  /* */
3. Js identifier: should begin with a-z/_/$, the latter can be a-z/_/$/number
4. data type:
   primitive type: number string  boolean null undefined
   object type: take for example(Array  Function)
 OR
   mutable type: object  array
   immutable type: string number boolean null undefined
5. overflow: Infinity/- Infinity
   underflow
   0/0 == NaN(not equal to any value, including itself)
6. escape sequence: \(\n \v \'' \' \\)
7. string API:
    contact: +
    length: str.length
    str.charAt(i)
    str.substring( , )
    str.slice( , )
    str.slice(val)(when val is negative, this syntax will generate the substring of str from end to start)
    str.indexof('c')
    c.lastIndexOf('c')
    str.indexOf('c', i)
    s.split(',')
    s.replace('c1','c2')
    s.toUpperCase()
    ps: replace() and toUpperCase() would generate a new string because of string is immutable type
8. to get the type of a value: typeof val;
summary:
   Binary Operators: 
   •Definition: Requires two operands, one before the operator and one after the operator.
   •Syntax: operand1 operator operand2
   •Example: 2 + 3; or x * z;

   Unary Operators:
   •Definition: Requires a single operand, either before or after the operator.
   •Syntax: operator operand OR operand operator
   •Example: y++ OR ++y

   Arithmetic Operators: Multiplication, Division, Modulus, Addition and Subtraction
   •Definition: Takes numerical values (either literals or variables) as their operands and returns a single numerical value.
   •Example: var count = 10 + 5 - 4; // 11
   •Example: var mult = 3 * 5; // 15

   Modulus Operators
   •Definition: This will give us the remainder of two values.
   •Example: 21 % 4; // 1

   Assignment Operators:
   •Definition: Assigns a value to its left operand based on the value of its right operand.
   •Example: var count = 5;

   Comparison Operators:
   •Definition: Compare both sides of equation and returns a logical value based on whether the comparison is true. The operands can be numerical, string, logical, or object values.
   •Equality operator (==): Checks for equality in value. Coersion may take place finding equal values between a string and number.
   •Strict equality operator (===): Checks for equality in value and type. Does not leave room for coersion.

   String Operator:
   •Definition: When the ‘+’ is used on strings the ‘+’ operator is called the concatenation operator.

